# Default values for splunk-connect-for-snmp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/splunk/splunk-connect-for-snmp/container
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

splunk:
  enabled: true

inventory:
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 10001

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001

  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 200m
    #   memory: 256Mi

  nodeSelector: {}

  tolerations: []

scheduler:
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 10001

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001

  resources: {}
#     limits:
#       cpu: 800m
#       memory: 512Mi
#     requests:
#       cpu: 500m
#       memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  podAntiAffinity: soft

worker:
  taskTimeout: 2400
  walkRetryMaxInterval: 600
  ignoreNotIncreasingOid: []
  poller:
    replicaCount: 2
    concurrency: 4
    prefetch: 1
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
    resources:
      limits:
        cpu: 500m
      requests:
        cpu: 250m
  trap:
    replicaCount: 2
    concurrency: 4
    prefetch: 30
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
    resources:
      limits:
        cpu: 500m
      requests:
        cpu: 250m
  sender:
    replicaCount: 1
    concurrency: 4
    prefetch: 30
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
    resources:
      limits:
        cpu: 500m
      requests:
        cpu: 250m
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 10001

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001

  resources:
     limits:
       cpu: 500m
       memory: 5128Mi
     requests:
       cpu: 300m
       memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  podAntiAffinity: soft

poller:
  usernameSecrets: []

sim:
  enabled: false
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  autoscaling:
    enabled: false

  podSecurityContext:
    fsGroup: 10001
  ingress:
    enabled: false
  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001

  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 200m
    #   memory: 256Mi

  nodeSelector: {}

  tolerations: []
  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
traps:
  replicaCount: 2
  usernameSecrets: []
  securityEngineId:
    - "80003a8c04"

  communities: {}
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 10001

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001

  service:
    usemetallb: true
    metallbsharingkey: "splunk-connect"
    type: LoadBalancer
    port: 162

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # limits:
    #   cpu: 1
    #   memory: 1Gi
    # requests:
    #   cpu: 200m
    #   memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  podAntiAffinity: soft

#############################################################################
### Please do not modify below values, unless you know what you're doing! ###
#############################################################################
mongodb:
  architecture: "standalone"
  ## @section Global parameters
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

  ## @section Common parameters
  ##

  ## @param clusterDomain Default Kubernetes cluster domain
  ##
  clusterDomain: cluster.local

  ##
  auth:
    ## @param auth.enabled Enable authentication
    ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
    ##
    enabled: false

  ## MongoDB&reg; containers' resource requests and limits.
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param resources.limits The resources limits for MongoDB&reg; containers
  ## @param resources.requests The requested resources for MongoDB&reg; containers
  ##
  rbac:
    create: true
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 768Mi
    # requests:
    #   cpu: 250m
    #   memory: 512Mi

  ## @section Volume Permissions parameters

  ## @section Metrics parameters

  metrics:
    ## @param metrics.enabled Enable using a sidecar Prometheus exporter
    ##
    enabled: true
    containerPort: 9216
    ## Prometheus Exporter service configuration
    ##
    service:
      ## @param metrics.service.annotations [object] Annotations for Prometheus Exporter pods. Evaluated as a template.
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9216"
redis:
  architecture: standalone
  auth:
    enabled: false