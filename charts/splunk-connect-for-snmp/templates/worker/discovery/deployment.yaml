{{- if eq (include "splunk-connect-for-snmp.discovery.enable" .) "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "splunk-connect-for-snmp.worker.fullname" . }}-discovery
  labels:
    {{- include "splunk-connect-for-snmp.worker.discovery.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "splunk-connect-for-snmp.worker.discovery.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "splunk-connect-for-snmp.worker.discovery.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "splunk-connect-for-snmp.serviceAccountName" . }}
      securityContext:
        fsGroup: 10001
      initContainers:
        - name: discovery-permissions
          image: alpine:3.19
          command: ["sh", "-c", "mkdir -p /app/discovery && touch /app/discovery/discovery_devices.csv && chmod 777 /app/discovery/discovery_devices.csv"]
          volumeMounts:
            - name: discovery-volume
              mountPath: /app/discovery
          securityContext:
            runAsUser: 0
      containers:
        - name: {{ .Chart.Name }}-discovery
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            [
              "celery", "worker-discovery",
            ]
          env:
            {{- include "environmental-variables" . | nindent 12 }}
            - name: DISCOVERY_PATH
              value: /app/discovery/discovery_devices.csv
            - name: IPv6_ENABLED
              {{- if .Values.discovery.ipv6Enabled}}
              value: "true"
              {{ else }}
              value: "false"
              {{- end }}
          volumeMounts:
            - name: config
              mountPath: "/app/config"
              readOnly: true
            - name: pysnmp-cache-volume
              mountPath: "/.pysnmp/"
              readOnly: false
            - name: tmp
              mountPath: "/tmp/"
              readOnly: false
            - name: discovery-volume
              mountPath: /app/discovery
            {{- range (.Values.discovery).usernameSecrets }}
            - name: {{ . }}-snmpv3-secrets
              mountPath: /app/secrets/snmpv3/{{ . }}
              readOnly: true
            {{- end }}
      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: {{ include "splunk-connect-for-snmp.name" . }}-config
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "config.yaml"
                path: "config.yaml"
        - name: pysnmp-cache-volume
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: discovery-volume
          hostPath:
            path: {{ .Values.discovery.discoveryPath }}
            type: DirectoryOrCreate
        {{- range (.Values.discovery).usernameSecrets }}
        - name: {{ . }}-snmpv3-secrets
          secret:
            secretName: {{ . }}
        {{- end }}
{{- end }}
