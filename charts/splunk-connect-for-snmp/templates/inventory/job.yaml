apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "splunk-connect-for-snmp.inventory.fullname" . }}
  labels:
    {{- include "splunk-connect-for-snmp.inventory.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      {{- with .Values.inventory.podAnnotations }}
      annotations:      
        {{- toYaml . | nindent 8 }}
      {{- end }}

      labels:
        {{- include "splunk-connect-for-snmp.inventory.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-inventory
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
              ["inventory"]
          env:
          - name: CONFIG_PATH
            value: /app/config/config.yaml
          - name: INVENTORY_PATH
            value: /app/inventory/inventory.csv
          - name: CELERY_BROKER_URL
            value: {{ include "splunk-connect-for-snmp.celery_url" . }}
          - name: MONGO_URI
            value: {{ include "splunk-connect-for-snmp.mongo_uri" . }}
          - name: MIB_SOURCES
            value: "http://{{ printf "%s-%s" .Release.Name "mibserver" }}/asn1/@mib@"
          - name: MIB_INDEX
            value: "http://{{ printf "%s-%s" .Release.Name "mibserver" }}/index.csv"
          - name: LOG_LEVEL
            value: {{ .Values.scheduler.logLevel | default "INFO" }}
          volumeMounts:
              - name: config
                mountPath: "/app/config"
                readOnly: true
              - name: inventory
                mountPath: "/app/inventory"
                readOnly: true
              - name: pysnmp-cache-volume
                mountPath: "/.pysnmp/"
                readOnly: false                    
              - name: tmp
                mountPath: "/tmp/"
                readOnly: false                    
              {{- if (.Values.poller).usernameSecrets }}
              - name: snmpv3-secrets
                mountPath: "/app/secrets/snmpv3"
                readOnly: true
              {{- end }}

      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: {{ include "splunk-connect-for-snmp.name" . }}-config
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "config.yaml"
                path: "config.yaml"
        {{- if (.Values.poller).usernameSecrets }}
        - name: snmpv3-secrets
          projected:
            sources:
            {{- range .Values.poller.usernameSecrets }}
            {{- $secret := (lookup "v1" "Secret" $.Release.Namespace . ) -}}            
            {{- if $secret }}
            - secret:
                name: {{ . }}
                items:
                  {{ if $secret.data.userName -}}
                  - key: userName
                    path: {{ . }}/userName                
                  {{- end }} 
                  {{ if $secret.data.authKey -}}
                  - key: authKey
                    path: {{ . }}/authKey
                  {{- end }} 
                  {{ if $secret.data.privKey -}}
                  - key: privKey
                    path: {{ . }}/privKey
                  {{- end }} 
                  {{ if $secret.data.authProtocol -}}
                  - key: authProtocol
                    path: {{ . }}/authProtocol
                  {{- end }} 
                  {{ if $secret.data.privProtocol -}}
                  - key: privProtocol
                    path: {{ . }}/privProtocol
                  {{- end }} 
                  {{ if $secret.data.contextEngineId -}}
                  - key: contextEngineId
                    path: {{ . }}/contextEngineId
                  {{- end }} 
                  {{ if $secret.data.contextName -}}
                  - key: contextName
                    path: {{ . }}/contextName
                  {{- end }} 
            {{- end }}                    
            {{- end }}
        {{- end }}                  
        - name: inventory
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: {{ include "splunk-connect-for-snmp.name" . }}-inventory
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "inventory.csv"
                path: "inventory.csv"
        - name: pysnmp-cache-volume
          emptyDir: {}    
        - name: tmp
          emptyDir: {}                        
      restartPolicy: OnFailure