apiVersion: apps/v1
kind: Deployment
metadata:
  name: sc4snmp-worker
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: sc4snmp-worker
spec:
  replicas: {{ .Values.worker.replicas | default "1" }}
  selector:
    matchLabels:
      app: sc4snmp-worker
  template:
    metadata:
      labels:
        app: sc4snmp-worker
    spec:
      securityContext:
          runAsNonRoot: true      
          runAsUser: 1001
          runAsGroup: 1001
          fsGroup: 2000
      containers:
        - name: sc4snmp-worker
          image: {{ .Values.worker.image | default "ghcr.io/splunk/splunk-connect-for-snmp-poller/container" }}:{{ .Values.worker.tag | default "1" }}
          imagePullPolicy: {{ .Values.worker.pullPolicy | default "IfNotPresent" }}
          args: [{{ printf "\"--log=%s\"" ( .Values.worker.logLevel | default "WARN" ) }}, "--config=/work/config/config.yaml"]
          securityContext:
            allowPrivilegeEscalation: false          
          env:
            - name: CELERY_BROKER_URL
              value: amqp://sc4snmp:sc4snmp@sc4snmp-rabbitmq:5672/
            - name: MIBS_SERVER_URL
              value: {{ printf "http://sc4snmp-mib-server-service:%s" ( .Values.mib.service_port | default "5000" ) | quote }}
            - name: MIBS_FILES_URL
              value: $(MIBS_SERVER_URL)/files/asn1/@mib@
            - name: MIB_SERVER_SERVICE_SERVICE_HOST
              value: sc4snmp-mib-server
            - name: MIB_SERVER_SERVICE_SERVICE_PORT
              value: {{ .Values.mib.service_port | quote }}
            - name: POLLER_EXECUTION_MODE
              value: worker
            - name: OTEL_SERVER_LOGS_URL
              value: {{ printf "http://otel-service:%s" ( .Values.otel.service_logs_port | default "8881" ) | quote }}
            - name: OTEL_SERVER_METRICS_URL
              value: {{ printf "http://otel-service:%s" ( .Values.otel.service_metrics_port | default "8882" ) | quote }}
            - name: MONGO_URI
          {{- if eq .Values.mongodb.architecture "replicaset" }}
              value: mongodb+srv://sc4snmp-mongodb-headless.{{ .Release.Namespace }}.svc.{{ .Values.mongodb.clusterDomain }}/?tls=false&ssl=false&replicaSet=rs0
          {{ else }}
              value: mongodb://sc4snmp-mongodb:27017
          {{ end }}              
     
          volumeMounts:
            - name: config
              mountPath: "/work/config"
              readOnly: true
          resources:
            {{- if .Values.worker.resources }}
{{ .Values.worker.resources | toYaml | trim | indent 12 }}
            {{ else }}
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
            {{ end }}
      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: sc4snmp-config
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "config.yaml"
                path: "config.yaml"
