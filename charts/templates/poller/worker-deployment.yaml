apiVersion: apps/v1
kind: Deployment
metadata:
  name: sc4snmp-worker
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: sc4snmp-worker
spec:
  replicas: {{ .Values.worker.replicas | default "1" }}
  selector:
    matchLabels:
      app: sc4snmp-worker
  template:
    metadata:
      labels:
        app: sc4snmp-worker
    spec:
      securityContext:
          runAsNonRoot: true      
          runAsUser: 1001
          runAsGroup: 1001
          fsGroup: 2000
      containers:
        - name: sc4snmp-worker
          image: {{ .Values.sc4snmp.image | default "ghcr.io/splunk/splunk-connect-for-snmp/container" }}:{{ .Values.sc4snmp.tag | default "1" }}
          imagePullPolicy: {{ .Values.sc4snmp.pullPolicy | default "IfNotPresent" }}
          args:
            [
              "celery", "worker",
            ]
          securityContext:
            allowPrivilegeEscalation: false          
          env:
            - name: CELERY_BROKER_URL
              value: amqp://{{ .Release.Namespace }}:sc4snmp@sc4snmp-rabbitmq:5672/
            - name: MONGO_URI
          {{- if eq .Values.mongodb.architecture "replicaset" }}
              value: mongodb+srv://sc4snmp-mongodb-headless.{{ .Release.Namespace }}.svc.{{ .Values.mongodb.clusterDomain }}/?tls=false&ssl=false&replicaSet=rs0
          {{ else }}
              value: mongodb://sc4snmp-mongodb:27017
          {{ end }}
            - name: SPLUNK_HEC_URI
              value: {{ printf "%s://%s:%s/services/collector" .Values.splunk.protocol .Values.splunk.host .Values.splunk.port | quote }}
            - name: SPLUNK_HEC_TOKEN
              value: {{ .Values.splunk.token | quote }}
            - name: SPLUNK_HEC_TLSVERIFY
              value: {{ .Values.splunk.secureSSL | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.worker.logLevel | default "info" }}
          volumeMounts:
            - name: config
              mountPath: "/work/config"
              readOnly: true
            - name: pysnmp-cache-volume
              mountPath: "/.pysnmp/"
              readOnly: false
          resources:
            {{- if .Values.worker.resources }}
{{ .Values.worker.resources | toYaml | trim | indent 12 }}
            {{ else }}
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
            {{ end }}
      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: sc4snmp-config
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "config.yaml"
                path: "config.yaml"
        - name: pysnmp-cache-volume
          emptyDir: {}                
