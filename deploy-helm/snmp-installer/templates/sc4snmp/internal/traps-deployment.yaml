apiVersion: apps/v1
kind: Deployment
metadata:
  name: sc4snmp-traps
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: sc4snmp-traps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sc4snmp-traps
  template:
    metadata:
      labels:
        app: sc4snmp-traps
    spec:
      containers:
        - name: traps
          image: {{ .Values.traps.image | default "ghcr.io/splunk/splunk-connect-for-snmp-traps" }}:{{ .Values.traps.version | default 1 }}
          imagePullPolicy: {{ .Values.traps.imagePullPolicy | default "Always" }}
          args:
            [
              "--loglevel={{ .Values.traps.logLevel }}",
              "--config=/work/config/config.yaml",
              "--index={{ .Values.scheduler.index.event }}",
              "--ipv6=",
            ]
          ports:
            - containerPort: 2162
          env:
            - name: MIBS_SERVER_URL
              value: {{ printf "http://%s:%s" .Values.mib.service_host .Values.mib.service_port | quote }}
            - name: OTEL_SERVER_URL
              value: {{ printf "http://%s:%s" .Values.otel.service_host .Values.otel.service_logs_port | quote }}
            - name: SPLUNK_HEC_URL
              valueFrom:
                secretKeyRef:
                  name: remote-splunk
                  key: splunkHecUrl
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: remote-splunk
                  key: splunkHecToken
            - name: SPLUNK_HEC_TLS_SKIP_VERIFY
              valueFrom:
                secretKeyRef:
                  name: remote-splunk
                  key: splunkHecTlsSkipVerify
          volumeMounts:
            - name: config
              mountPath: "/work/config"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: sc4snmp-trap
            items:
              - key: "config.yaml"
                path: "config.yaml"
