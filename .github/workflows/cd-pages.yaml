name: cd-pages-helm

on:
  push:
    branches-ignore:
      - "**"
    tags:
      - "v*"

jobs:
  mike:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          token: "${{ secrets.PAT_CLATOOL }}"

      #Build docker images
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1.9.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/splunk/splunk-connect-for-snmp/container
          tags: |
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=sha,format=long
      - name: Build and push action
        id: docker_action_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-to: type=inline

  #      - name: Upload
  #        run: |
  #          VERSION=$(echo $GITHUB_REF | cut -d / -f 3 | sed 's/v//')
  #          echo $VERSION
  #          #We only published tagged version for main
  #          if [[ $VERSION != *"develop"* ]]; then
  #            pip3 install poetry
  #            poetry install
  #            poetry run mike deploy -p $VERSION
  #          fi
  helm:
    runs-on: ubuntu-latest
    needs:
      - mike
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.6.3
      - name: Upload
        run: |
          mkdir /tmp/package
          mkdir /tmp/index
          mkdir /tmp/origin
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          VERSION=$(echo $GITHUB_REF | cut -d / -f 3)
          echo $VERSION
          wget https://splunk.github.io/splunk-connect-for-snmp/index.yaml -P /tmp/origin || true
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add pysnmp-mibs https://pysnmp.github.io/mibs/charts
          echo "$(helm repo search pysnmp-mibs)"
          helm repo update
          echo "$(helm repo search pysnmp-mibs)"
          helm dependency build charts/splunk-connect-for-snmp
          helm package charts/splunk-connect-for-snmp -d /tmp/package
          gh release upload $VERSION /tmp/package/*
          helm repo index /tmp/package --url https://github.com/splunk/splunk-connect-for-snmp/releases/download/$VERSION --merge /tmp/origin/index.yaml
          cp /tmp/package/index.yaml /tmp/index/
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/index
          keep_files: true
